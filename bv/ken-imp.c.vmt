(set-info :source |printed by MathSAT|)
(declare-fun .PC.2 () Bool)
(declare-fun .PC.1 () Bool)
(declare-fun .PC.0 () Bool)
(declare-fun .PC.1.next () Bool)
(declare-fun |__NONDET_INLINE_INIT__2__4$main#0| () (_ BitVec 32))
(declare-fun x__5$main () (_ BitVec 32))
(declare-fun .PC.2.next () Bool)
(declare-fun |__NONDET_INLINE_INIT__4__5$main#1| () (_ BitVec 32))
(declare-fun __RET__$main.next () (_ BitVec 32))
(declare-fun .PC.0.next () Bool)
(declare-fun j__3$main () (_ BitVec 32))
(declare-fun __RET__$main () (_ BitVec 32))
(declare-fun y__7$main () (_ BitVec 32))
(declare-fun y__7$main.next () (_ BitVec 32))
(declare-fun j__3$main.next () (_ BitVec 32))
(declare-fun i__1$main.next () (_ BitVec 32))
(declare-fun i__1$main () (_ BitVec 32))
(declare-fun x__5$main.next () (_ BitVec 32))
(define-fun .def_13 () Bool (! .PC.0 :next |.PC.0.next|))
(define-fun .def_14 () Bool (not .def_13))
(define-fun .def_11 () Bool (! .PC.1 :next |.PC.1.next|))
(define-fun .def_12 () Bool (not .def_11))
(define-fun .def_15 () Bool (and .def_12 .def_14))
(define-fun .def_9 () Bool (! .PC.2 :next |.PC.2.next|))
(define-fun .def_10 () Bool (not .def_9))
(define-fun .def_16 () Bool (! (and .def_10 .def_15) :init true))
(define-fun .def_59 () Bool (= i__1$main.next |__NONDET_INLINE_INIT__2__4$main#0|))
(define-fun .def_57 () Bool (= j__3$main.next |__NONDET_INLINE_INIT__4__5$main#1|))
(define-fun .def_60 () Bool (and .def_57 .def_59))
(define-fun .def_55 () Bool (= x__5$main.next i__1$main.next))
(define-fun .def_61 () Bool (and .def_55 .def_60))
(define-fun .def_54 () Bool (= j__3$main.next y__7$main.next))
(define-fun .def_62 () Bool (and .def_54 .def_61))
(define-fun .def_42 () (_ BitVec 32) (! __RET__$main :next |__RET__$main.next|))
(define-fun .def_44 () Bool (= .def_42 __RET__$main.next))
(define-fun .def_63 () Bool (and .def_44 .def_62))
(define-fun .def_22 () Bool (not .PC.2.next))
(define-fun .def_18 () Bool (not .PC.1.next))
(define-fun .def_20 () Bool (and .def_18 .PC.0.next))
(define-fun .def_23 () Bool (and .def_20 .def_22))
(define-fun .def_64 () Bool (and .def_23 .def_63))
(define-fun .def_65 () Bool (and .def_16 .def_64))
(define-fun .def_51 () Bool (and .def_12 .def_13))
(define-fun .def_52 () Bool (and .def_10 .def_51))
(define-fun .def_47 () (_ BitVec 32) (! i__1$main :next |i__1$main.next|))
(define-fun .def_48 () Bool (= i__1$main.next .def_47))
(define-fun .def_32 () (_ BitVec 32) (! x__5$main :next |x__5$main.next|))
(define-fun .def_36 () (_ BitVec 32) (bvadd (_ bv4294967295 32) .def_32))
(define-fun .def_38 () Bool (= .def_36 x__5$main.next))
(define-fun .def_34 () Bool (= .def_32 (_ bv0 32)))
(define-fun .def_35 () Bool (not .def_34))
(define-fun .def_39 () Bool (and .def_35 .def_38))
(define-fun .def_28 () (_ BitVec 32) (! y__7$main :next |y__7$main.next|))
(define-fun .def_29 () (_ BitVec 32) (bvadd (_ bv4294967295 32) .def_28))
(define-fun .def_31 () Bool (= .def_29 y__7$main.next))
(define-fun .def_40 () Bool (and .def_31 .def_39))
(define-fun .def_25 () (_ BitVec 32) (! j__3$main :next |j__3$main.next|))
(define-fun .def_26 () Bool (= j__3$main.next .def_25))
(define-fun .def_41 () Bool (and .def_26 .def_40))
(define-fun .def_45 () Bool (and .def_41 .def_44))
(define-fun .def_49 () Bool (and .def_45 .def_48))
(define-fun .def_50 () Bool (and .def_23 .def_49))
(define-fun .def_53 () Bool (and .def_50 .def_52))
(define-fun .def_66 () Bool (! (or .def_53 .def_65) :trans true))
(define-fun .def_67 () Bool (and .def_11 .def_13))
(define-fun .def_68 () Bool (and .def_10 .def_67))
(define-fun .def_69 () Bool (! (not .def_68) :invar-property 0))
(assert true)
